// 객체 - 정의하는 방법 III

// 이전의 방법들은 객체를 생성할 때 불편하다.
// 그래서 다음의 방법을 주로 사용한다.

var obj = new Object();

// 객체 생성 과정
// 1) 빈 객체를 생성한 후 함수를 호출한다.
// 2) Object(0함수는 prototype에 들어있는 값과 함수를 사용할 수 있다록
//    빈 객체를 초기화 시킨다.
//    => 이때 객체에 추가된 값이나 함수 등을 "프로퍼티(property)"라 부른다.
// 3) 객체 주소를 리턴한다.


console.log(obj)
console.log("========================")
console.log(obj.toString());
console.log("========================")
console.log(obj.valueOf());
// 주의!
// => 자바는 클래스 라는 설계도에 따라 메모리를 준비한다.
// => 자바 스크립트는 자바와 달리 설계도가 없다!
//    ECMAscript 6 에 class 문법이 추가되었다.
// => 그래서 설계도에 따라 메모리를 준비하는 것이 아니라
//    빈 객체를 생성한 다음 필요한 만큼 프로퍼티를 추가한다.
// => 자바에서 맵 객체를 생성하는 것과 유사하다.


// new 명령으로 빈 객체만 생성할 수 없다.
//var obj2 = new; // 실행 오류!
// new 명령다음에 반드시 객체를 초기화시키는 함수가 와야한다.
